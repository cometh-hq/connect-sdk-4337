export const multiP256OwnerModularAccountFactoryAbi = [
    {
        type: "constructor",
        inputs: [
            { name: "owner", internalType: "address", type: "address" },
            {
                name: "multiOwnerPlugin",
                internalType: "address",
                type: "address",
            },
            {
                name: "webAuthnInitializePlugin",
                internalType: "address",
                type: "address",
            },
            {
                name: "implementation",
                internalType: "address",
                type: "address",
            },
            {
                name: "multiOwnerPluginManifestHash",
                internalType: "bytes32",
                type: "bytes32",
            },
            {
                name: "webAuthnInitializePluginManifestHash",
                internalType: "bytes32",
                type: "bytes32",
            },
            {
                name: "entryPoint",
                internalType: "contract IEntryPoint",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
    },
    { type: "receive", stateMutability: "payable" },
    {
        type: "function",
        inputs: [],
        name: "ENTRYPOINT",
        outputs: [
            { name: "", internalType: "contract IEntryPoint", type: "address" },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        inputs: [],
        name: "IMPL",
        outputs: [{ name: "", internalType: "address", type: "address" }],
        stateMutability: "view",
    },
    {
        type: "function",
        inputs: [],
        name: "MULTI_OWNER_PLUGIN",
        outputs: [{ name: "", internalType: "address", type: "address" }],
        stateMutability: "view",
    },
    {
        type: "function",
        inputs: [],
        name: "WEBAUTHN_INITIALIZE_PLUGIN",
        outputs: [{ name: "", internalType: "address", type: "address" }],
        stateMutability: "view",
    },
    {
        type: "function",
        inputs: [],
        name: "acceptOwnership",
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        inputs: [
            { name: "unstakeDelay", internalType: "uint32", type: "uint32" },
            { name: "amount", internalType: "uint256", type: "uint256" },
        ],
        name: "addStake",
        outputs: [],
        stateMutability: "payable",
    },
    {
        type: "function",
        inputs: [
            { name: "salt", internalType: "uint256", type: "uint256" },
            { name: "owners", internalType: "address[]", type: "address[]" },
        ],
        name: "createAccount",
        outputs: [{ name: "addr", internalType: "address", type: "address" }],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        inputs: [
            { name: "salt", internalType: "uint256", type: "uint256" },
            { name: "owners", internalType: "address[]", type: "address[]" },
        ],
        name: "getAddress",
        outputs: [{ name: "", internalType: "address", type: "address" }],
        stateMutability: "view",
    },
    {
        type: "function",
        inputs: [],
        name: "owner",
        outputs: [{ name: "", internalType: "address", type: "address" }],
        stateMutability: "view",
    },
    {
        type: "function",
        inputs: [],
        name: "pendingOwner",
        outputs: [{ name: "", internalType: "address", type: "address" }],
        stateMutability: "view",
    },
    {
        type: "function",
        inputs: [],
        name: "renounceOwnership",
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        inputs: [
            { name: "newOwner", internalType: "address", type: "address" },
        ],
        name: "transferOwnership",
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        inputs: [],
        name: "unlockStake",
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        inputs: [
            { name: "to", internalType: "address payable", type: "address" },
            { name: "token", internalType: "address", type: "address" },
            { name: "amount", internalType: "uint256", type: "uint256" },
        ],
        name: "withdraw",
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        inputs: [
            { name: "to", internalType: "address payable", type: "address" },
        ],
        name: "withdrawStake",
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "event",
        anonymous: false,
        inputs: [
            {
                name: "previousOwner",
                internalType: "address",
                type: "address",
                indexed: true,
            },
            {
                name: "newOwner",
                internalType: "address",
                type: "address",
                indexed: true,
            },
        ],
        name: "OwnershipTransferStarted",
    },
    {
        type: "event",
        anonymous: false,
        inputs: [
            {
                name: "previousOwner",
                internalType: "address",
                type: "address",
                indexed: true,
            },
            {
                name: "newOwner",
                internalType: "address",
                type: "address",
                indexed: true,
            },
        ],
        name: "OwnershipTransferred",
    },
    { type: "error", inputs: [], name: "InvalidAction" },
    { type: "error", inputs: [], name: "InvalidOwner" },
    { type: "error", inputs: [], name: "OwnersArrayEmpty" },
    { type: "error", inputs: [], name: "OwnersLimitExceeded" },
    { type: "error", inputs: [], name: "TransferFailed" },
] as const;
